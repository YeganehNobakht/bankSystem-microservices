server:
  port: 8090
spring:
  application:
    name: loans
  profiles:
    active: "prod"
#  datasource:
#    url: "jdbc:mysql://localhost:3307/loansdb"
#    username: root
#    password: root

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true


  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    #    "optional" keyword: It tells to this service if it is not
    #  able to connect to config server, it can still continue
    #  run this service.
    import: "optional:configserver:http://localhost:8071/"

#To prevent building rabbitMq container because of the OS speed-->
#  rabbitmq:
#    host: mybroker.com
#    port: 5672
#    username: user
#    password: secret

#  Enable All Endpoints in Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    #    This service will register with eureka server by using the ip address -->
    prefer-ip-address: false
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "loans"
    description: "Bank System loans Application"
    version: "1.0.0"

logging:
  level:
    com:
      bmc:
        loans: DEBUG