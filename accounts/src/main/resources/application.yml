server:
  port: 8080
spring:
  application:
    name: accounts
  profiles:
    active: "prod"
#  datasource:
#    url: "jdbc:mysql://localhost:3306/accountsdb"
#    username: root
#    password: root


  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true

  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
#    "optional" keyword: It tells to this service if it is not
#  able to connect to config server, it can still continue
#  run this service.
    import: "optional:configserver:http://localhost:8071/"

#activing circuit breaker for all openFeign clients inside the accounts-->
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true


#To prevent building rabbitMq container because of the OS speed
#  rabbitmq:
#    host: mybroker.com
#    port: 5672
#    username: user
#    password: secret

#  Enable All Endpoints in Spring Boot Actuator


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
#    This service will register with eureka server by using the ip address -->
    prefer-ip-address: false
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Bank System Accounts Application"
    version: "1.0.0"

logging:
  level:
    com:
      bmc:
        accounts: DEBUG


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000